{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_frac",
          "type": "uint256"
        }
      ],
      "name": "mint_relative",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280601781526020017f4554482f737445544820506f6f6c204c5020546f6b656e000000000000000000815250604051806040016040528060098152602001680c6e4ec5ae6e88aa8960bb1b81525081600390816200007b919062000159565b5060046200008a828262000159565b5050600580546001600160a01b031990811660011790915560068054909116331790555062000225565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000df57607f821691505b6020821081036200010057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015457600081815260208120601f850160051c810160208610156200012f5750805b601f850160051c820191505b8181101562000150578281556001016200013b565b5050505b505050565b81516001600160401b03811115620001755762000175620000b4565b6200018d81620001868454620000ca565b8462000106565b602080601f831160018114620001c55760008415620001ac5750858301515b600019600386901b1c1916600185901b17855562000150565b600085815260208120601f198616915b82811015620001f657888601518255948401946001909101908401620001d5565b5085821015620002155787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610dda80620002356000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636962f84511610097578063a457c2d711610066578063a457c2d714610222578063a9059cbb14610235578063c4d66de814610248578063dd62ed3e1461025d57600080fd5b80636962f845146101cb57806370a08231146101de57806379cc67901461020757806395d89b411461021a57600080fd5b806323b872dd116100d357806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857600080fd5b806306fdde03146101055780630754617214610123578063095ea7b31461014e57806318160ddd14610171575b600080fd5b61010d610270565b60405161011a9190610ad7565b60405180910390f35b600554610136906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61016161015c366004610b41565b610302565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610161610191366004610b6b565b61031c565b6040516012815260200161011a565b6101616101b3366004610b41565b610340565b6101616101c6366004610b41565b610362565b6101756101d9366004610b41565b6103ce565b6101756101ec366004610ba7565b6001600160a01b031660009081526020819052604090205490565b610161610215366004610b41565b610466565b61010d6104c4565b610161610230366004610b41565b6104d3565b610161610243366004610b41565b61054e565b61025b610256366004610ba7565b61055c565b005b61017561026b366004610bc2565b6105b6565b60606003805461027f90610bf5565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610bf5565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b6000336103108185856105e1565b60019150505b92915050565b60003361032a858285610706565b610335858585610780565b506001949350505050565b60003361031081858561035383836105b6565b61035d9190610c45565b6105e1565b6005546000906001600160a01b031633146103bb5760405162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b5a5b9d195c8818d85b881b5a5b9d60621b60448201526064015b60405180910390fd5b6103c58383610912565b50600192915050565b6000806103dd6012600a610d3c565b836103e760025490565b6103f19190610d4b565b6103fb9190610d62565b6005549091506001600160a01b0316331461044f5760405162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b5a5b9d195c8818d85b881b5a5b9d60621b60448201526064016103b2565b801561045f5761045f8482610912565b9392505050565b6005546000906001600160a01b031633146104ba5760405162461bcd60e51b815260206004820152601460248201527337b7363c9036b4b73a32b91031b0b710313ab93760611b60448201526064016103b2565b6103c583836109bf565b60606004805461027f90610bf5565b600033816104e182866105b6565b9050838110156105415760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b2565b61033582868684036105e1565b600033610310818585610780565b6006546001600160a01b0316331461057357600080fd5b600580546001600160a01b0319166001600160a01b03831617905560405160008082523391600080516020610d858339815191529060200160405180910390a350565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b2565b6001600160a01b0382166106a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061071284846105b6565b9050600019811461077a578181101561076d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b2565b61077a84848484036105e1565b50505050565b6001600160a01b0383166107e45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b2565b6001600160a01b0382166108465760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b2565b6001600160a01b038316600090815260208190526040902054818110156108be5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b2565b6001600160a01b0384811660008181526020818152604080832087870390559387168083529184902080548701905592518581529092600080516020610d85833981519152910160405180910390a361077a565b6001600160a01b0382166109685760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b2565b806002600082825461097a9190610c45565b90915550506001600160a01b03821660008181526020818152604080832080548601905551848152600080516020610d85833981519152910160405180910390a35050565b6001600160a01b038216610a1f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103b2565b6001600160a01b03821660009081526020819052604090205481811015610a935760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103b2565b6001600160a01b038316600081815260208181526040808320868603905560028054879003905551858152919291600080516020610d8583398151915291016106f9565b600060208083528351808285015260005b81811015610b0457858101830151858201604001528201610ae8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b3c57600080fd5b919050565b60008060408385031215610b5457600080fd5b610b5d83610b25565b946020939093013593505050565b600080600060608486031215610b8057600080fd5b610b8984610b25565b9250610b9760208501610b25565b9150604084013590509250925092565b600060208284031215610bb957600080fd5b61045f82610b25565b60008060408385031215610bd557600080fd5b610bde83610b25565b9150610bec60208401610b25565b90509250929050565b600181811c90821680610c0957607f821691505b602082108103610c2957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031657610316610c2f565b600181815b80851115610c93578160001904821115610c7957610c79610c2f565b80851615610c8657918102915b93841c9390800290610c5d565b509250929050565b600082610caa57506001610316565b81610cb757506000610316565b8160018114610ccd5760028114610cd757610cf3565b6001915050610316565b60ff841115610ce857610ce8610c2f565b50506001821b610316565b5060208310610133831016604e8410600b8410161715610d16575081810a610316565b610d208383610c58565b8060001904821115610d3457610d34610c2f565b029392505050565b600061045f60ff841683610c9b565b808202811582820484141761031657610316610c2f565b600082610d7f57634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206fc6d520a1155c43d348b97a64ac8ad083f51e9a02404d4de5c3250d8655466c64736f6c63430008130033",
    "sourceMap": "115:1093:26:-:0;;;237:124;;;;;;;;;;1980:113:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:20;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:20;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;307:6:26::1;:19:::0;;-1:-1:-1;;;;;;307:19:26;;::::1;324:1;307:19;::::0;;;336:5:::1;:18:::0;;;;::::1;344:10;336:18;::::0;;-1:-1:-1;115:1093:26;;14:127:32;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:32;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:32;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:32;;;2580:26;2531:89;-1:-1:-1;;1335:1:32;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:32;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:32;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:32;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:32:o;:::-;115:1093:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80636962f84511610097578063a457c2d711610066578063a457c2d714610222578063a9059cbb14610235578063c4d66de814610248578063dd62ed3e1461025d57600080fd5b80636962f845146101cb57806370a08231146101de57806379cc67901461020757806395d89b411461021a57600080fd5b806323b872dd116100d357806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857600080fd5b806306fdde03146101055780630754617214610123578063095ea7b31461014e57806318160ddd14610171575b600080fd5b61010d610270565b60405161011a9190610ad7565b60405180910390f35b600554610136906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61016161015c366004610b41565b610302565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610161610191366004610b6b565b61031c565b6040516012815260200161011a565b6101616101b3366004610b41565b610340565b6101616101c6366004610b41565b610362565b6101756101d9366004610b41565b6103ce565b6101756101ec366004610ba7565b6001600160a01b031660009081526020819052604090205490565b610161610215366004610b41565b610466565b61010d6104c4565b610161610230366004610b41565b6104d3565b610161610243366004610b41565b61054e565b61025b610256366004610ba7565b61055c565b005b61017561026b366004610bc2565b6105b6565b60606003805461027f90610bf5565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610bf5565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b6000336103108185856105e1565b60019150505b92915050565b60003361032a858285610706565b610335858585610780565b506001949350505050565b60003361031081858561035383836105b6565b61035d9190610c45565b6105e1565b6005546000906001600160a01b031633146103bb5760405162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b5a5b9d195c8818d85b881b5a5b9d60621b60448201526064015b60405180910390fd5b6103c58383610912565b50600192915050565b6000806103dd6012600a610d3c565b836103e760025490565b6103f19190610d4b565b6103fb9190610d62565b6005549091506001600160a01b0316331461044f5760405162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b5a5b9d195c8818d85b881b5a5b9d60621b60448201526064016103b2565b801561045f5761045f8482610912565b9392505050565b6005546000906001600160a01b031633146104ba5760405162461bcd60e51b815260206004820152601460248201527337b7363c9036b4b73a32b91031b0b710313ab93760611b60448201526064016103b2565b6103c583836109bf565b60606004805461027f90610bf5565b600033816104e182866105b6565b9050838110156105415760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b2565b61033582868684036105e1565b600033610310818585610780565b6006546001600160a01b0316331461057357600080fd5b600580546001600160a01b0319166001600160a01b03831617905560405160008082523391600080516020610d858339815191529060200160405180910390a350565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b2565b6001600160a01b0382166106a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061071284846105b6565b9050600019811461077a578181101561076d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b2565b61077a84848484036105e1565b50505050565b6001600160a01b0383166107e45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b2565b6001600160a01b0382166108465760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b2565b6001600160a01b038316600090815260208190526040902054818110156108be5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b2565b6001600160a01b0384811660008181526020818152604080832087870390559387168083529184902080548701905592518581529092600080516020610d85833981519152910160405180910390a361077a565b6001600160a01b0382166109685760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b2565b806002600082825461097a9190610c45565b90915550506001600160a01b03821660008181526020818152604080832080548601905551848152600080516020610d85833981519152910160405180910390a35050565b6001600160a01b038216610a1f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103b2565b6001600160a01b03821660009081526020819052604090205481811015610a935760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103b2565b6001600160a01b038316600081815260208181526040808320868603905560028054879003905551858152919291600080516020610d8583398151915291016106f9565b600060208083528351808285015260005b81811015610b0457858101830151858201604001528201610ae8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b3c57600080fd5b919050565b60008060408385031215610b5457600080fd5b610b5d83610b25565b946020939093013593505050565b600080600060608486031215610b8057600080fd5b610b8984610b25565b9250610b9760208501610b25565b9150604084013590509250925092565b600060208284031215610bb957600080fd5b61045f82610b25565b60008060408385031215610bd557600080fd5b610bde83610b25565b9150610bec60208401610b25565b90509250929050565b600181811c90821680610c0957607f821691505b602082108103610c2957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031657610316610c2f565b600181815b80851115610c93578160001904821115610c7957610c79610c2f565b80851615610c8657918102915b93841c9390800290610c5d565b509250929050565b600082610caa57506001610316565b81610cb757506000610316565b8160018114610ccd5760028114610cd757610cf3565b6001915050610316565b60ff841115610ce857610ce8610c2f565b50506001821b610316565b5060208310610133831016604e8410600b8410161715610d16575081810a610316565b610d208383610c58565b8060001904821115610d3457610d34610c2f565b029392505050565b600061045f60ff841683610c9b565b808202811582820484141761031657610316610c2f565b600082610d7f57634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206fc6d520a1155c43d348b97a64ac8ad083f51e9a02404d4de5c3250d8655466c64736f6c63430008130033",
    "sourceMap": "115:1093:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;150:21:26;;;;;-1:-1:-1;;;;;150:21:26;;;;;;-1:-1:-1;;;;;731:32:32;;;713:51;;701:2;686:18;150:21:26;567:203:32;4444:197:20;;;;;;:::i;:::-;;:::i;:::-;;;1377:14:32;;1370:22;1352:41;;1340:2;1325:18;4444:197:20;1212:187:32;3255:106:20;3342:12;;3255:106;;;1550:25:32;;;1538:2;1523:18;3255:106:20;1404:177:32;5203:256:20;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;2061:36:32;;2049:2;2034:18;3104:91:20;1919:184:32;5854:234:20;;;;;;:::i;:::-;;:::i;536:185:26:-;;;;;;:::i;:::-;;:::i;727:279::-;;;;;;:::i;:::-;;:::i;3419:125:20:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:20;3493:7;3519:18;;;;;;;;;;;;3419:125;1012:194:26;;;;;;:::i;:::-;;:::i;2369:102:20:-;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;367:163:26:-;;;;;;:::i;:::-;;:::i;:::-;;3987:149:20;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:23;4581:32:20;719:10:23;4597:7:20;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:23;5356:38:20;5372:4;719:10:23;5387:6:20;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:20;;5203:256;-1:-1:-1;;;;5203:256:20:o;5854:234::-;5942:4;719:10:23;5996:64:20;719:10:23;6012:7:20;6049:10;6021:25;719:10:23;6012:7:20;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;536:185:26:-;633:6;;595:4;;-1:-1:-1;;;;;633:6:26;619:10;:20;611:53;;;;-1:-1:-1;;;611:53:26;;3413:2:32;611:53:26;;;3395:21:32;3452:2;3432:18;;;3425:30;-1:-1:-1;;;3471:18:32;;;3464:50;3531:18;;611:53:26;;;;;;;;;674:19;680:3;685:7;674:5;:19::i;:::-;-1:-1:-1;710:4:26;536:185;;;;:::o;727:279::-;793:4;;849:16;3186:2:20;849::26;:16;:::i;:::-;840:5;824:13;3342:12:20;;;3255:106;824:13:26;:21;;;;:::i;:::-;:42;;;;:::i;:::-;898:6;;809:57;;-1:-1:-1;;;;;;898:6:26;884:10;:20;876:53;;;;-1:-1:-1;;;876:53:26;;3413:2:32;876:53:26;;;3395:21:32;3452:2;3432:18;;;3425:30;-1:-1:-1;;;3471:18:32;;;3464:50;3531:18;;876:53:26;3211:344:32;876:53:26;943:11;;939:36;;956:19;962:3;967:7;956:5;:19::i;:::-;992:7;727:279;-1:-1:-1;;;727:279:26:o;1012:194::-;1115:6;;1077:4;;-1:-1:-1;;;;;1115:6:26;1101:10;:20;1093:53;;;;-1:-1:-1;;;1093:53:26;;5540:2:32;1093:53:26;;;5522:21:32;5579:2;5559:18;;;5552:30;-1:-1:-1;;;5598:18:32;;;5591:50;5658:18;;1093:53:26;5338:344:32;1093:53:26;1156:21;1162:5;1169:7;1156:5;:21::i;2369:102:20:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:23;6668:4:20;6749:25;719:10:23;6766:7:20;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:20;;5889:2:32;6784:85:20;;;5871:21:32;5928:2;5908:18;;;5901:30;5967:34;5947:18;;;5940:62;-1:-1:-1;;;6018:18:32;;;6011:35;6063:19;;6784:85:20;5687:401:32;6784:85:20;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:23;3873:28:20;719:10:23;3890:2:20;3894:6;3873:9;:28::i;367:163:26:-;429:5;;-1:-1:-1;;;;;429:5:26;438:10;429:19;421:28;;;;;;459:6;:14;;-1:-1:-1;;;;;;459:14:26;-1:-1:-1;;;;;459:14:26;;;;;488:35;;-1:-1:-1;1550:25:32;;;509:10:26;;-1:-1:-1;;;;;;;;;;;488:35:26;1538:2:32;1523:18;488:35:26;;;;;;;367:163;:::o;3987:149:20:-;-1:-1:-1;;;;;4102:18:20;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:20;;10550:68;;;;-1:-1:-1;;;10550:68:20;;6485:2:32;10550:68:20;;;6467:21:32;6524:2;6504:18;;;6497:30;6563:34;6543:18;;;6536:62;-1:-1:-1;;;6614:18:32;;;6607:34;6658:19;;10550:68:20;6283:400:32;10550:68:20;-1:-1:-1;;;;;10636:21:20;;10628:68;;;;-1:-1:-1;;;10628:68:20;;6890:2:32;10628:68:20;;;6872:21:32;6929:2;6909:18;;;6902:30;6968:34;6948:18;;;6941:62;-1:-1:-1;;;7019:18:32;;;7012:32;7061:19;;10628:68:20;6688:398:32;10628:68:20;-1:-1:-1;;;;;10707:18:20;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1550:25:32;;;10758:32:20;;1523:18:32;10758:32:20;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:20;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:20;;7293:2:32;11297:68:20;;;7275:21:32;7332:2;7312:18;;;7305:30;7371:31;7351:18;;;7344:59;7420:18;;11297:68:20;7091:353:32;11297:68:20;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:20;;7544:68;;;;-1:-1:-1;;;7544:68:20;;7651:2:32;7544:68:20;;;7633:21:32;7690:2;7670:18;;;7663:30;7729:34;7709:18;;;7702:62;-1:-1:-1;;;7780:18:32;;;7773:35;7825:19;;7544:68:20;7449:401:32;7544:68:20;-1:-1:-1;;;;;7630:16:20;;7622:64;;;;-1:-1:-1;;;7622:64:20;;8057:2:32;7622:64:20;;;8039:21:32;8096:2;8076:18;;;8069:30;8135:34;8115:18;;;8108:62;-1:-1:-1;;;8186:18:32;;;8179:33;8229:19;;7622:64:20;7855:399:32;7622:64:20;-1:-1:-1;;;;;7768:15:20;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:20;;8461:2:32;7793:72:20;;;8443:21:32;8500:2;8480:18;;;8473:30;8539:34;8519:18;;;8512:62;-1:-1:-1;;;8590:18:32;;;8583:36;8636:19;;7793:72:20;8259:402:32;7793:72:20;-1:-1:-1;;;;;7899:15:20;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1550:25:32;;;8114:13:20;;-1:-1:-1;;;;;;;;;;;8163:26:20;1523:18:32;8163:26:20;;;;;;;8200:37;9375:659;8520:535;-1:-1:-1;;;;;8603:21:20;;8595:65;;;;-1:-1:-1;;;8595:65:20;;8868:2:32;8595:65:20;;;8850:21:32;8907:2;8887:18;;;8880:30;8946:33;8926:18;;;8919:61;8997:18;;8595:65:20;8666:355:32;8595:65:20;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:20;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1550:25:32;;;-1:-1:-1;;;;;;;;;;;8952:37:20;1523:18:32;8952:37:20;;;;;;;8520:535;;:::o;9375:659::-;-1:-1:-1;;;;;9458:21:20;;9450:67;;;;-1:-1:-1;;;9450:67:20;;9228:2:32;9450:67:20;;;9210:21:32;9267:2;9247:18;;;9240:30;9306:34;9286:18;;;9279:62;-1:-1:-1;;;9357:18:32;;;9350:31;9398:19;;9450:67:20;9026:397:32;9450:67:20;-1:-1:-1;;;;;9613:18:20;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:20;;9630:2:32;9641:71:20;;;9612:21:32;9669:2;9649:18;;;9642:30;9708:34;9688:18;;;9681:62;-1:-1:-1;;;9759:18:32;;;9752:32;9801:19;;9641:71:20;9428:398:32;9641:71:20;-1:-1:-1;;;;;9746:18:20;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1550:25:32;;;9746:9:20;;:18;-1:-1:-1;;;;;;;;;;;9931:37:20;1523:18:32;9931:37:20;1404:177:32;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;775:173::-;843:20;;-1:-1:-1;;;;;892:31:32;;882:42;;872:70;;938:1;935;928:12;872:70;775:173;;;:::o;953:254::-;1021:6;1029;1082:2;1070:9;1061:7;1057:23;1053:32;1050:52;;;1098:1;1095;1088:12;1050:52;1121:29;1140:9;1121:29;:::i;:::-;1111:39;1197:2;1182:18;;;;1169:32;;-1:-1:-1;;;953:254:32:o;1586:328::-;1663:6;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;1771:29;1790:9;1771:29;:::i;:::-;1761:39;;1819:38;1853:2;1842:9;1838:18;1819:38;:::i;:::-;1809:48;;1904:2;1893:9;1889:18;1876:32;1866:42;;1586:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:127::-;3010:10;3005:3;3001:20;2998:1;2991:31;3041:4;3038:1;3031:15;3065:4;3062:1;3055:15;3081:125;3146:9;;;3167:10;;;3164:36;;;3180:18;;:::i;3560:422::-;3649:1;3692:5;3649:1;3706:270;3727:7;3717:8;3714:21;3706:270;;;3786:4;3782:1;3778:6;3774:17;3768:4;3765:27;3762:53;;;3795:18;;:::i;:::-;3845:7;3835:8;3831:22;3828:55;;;3865:16;;;;3828:55;3944:22;;;;3904:15;;;;3706:270;;;3710:3;3560:422;;;;;:::o;3987:806::-;4036:5;4066:8;4056:80;;-1:-1:-1;4107:1:32;4121:5;;4056:80;4155:4;4145:76;;-1:-1:-1;4192:1:32;4206:5;;4145:76;4237:4;4255:1;4250:59;;;;4323:1;4318:130;;;;4230:218;;4250:59;4280:1;4271:10;;4294:5;;;4318:130;4355:3;4345:8;4342:17;4339:43;;;4362:18;;:::i;:::-;-1:-1:-1;;4418:1:32;4404:16;;4433:5;;4230:218;;4532:2;4522:8;4519:16;4513:3;4507:4;4504:13;4500:36;4494:2;4484:8;4481:16;4476:2;4470:4;4467:12;4463:35;4460:77;4457:159;;;-1:-1:-1;4569:19:32;;;4601:5;;4457:159;4648:34;4673:8;4667:4;4648:34;:::i;:::-;4718:6;4714:1;4710:6;4706:19;4697:7;4694:32;4691:58;;;4729:18;;:::i;:::-;4767:20;;3987:806;-1:-1:-1;;;3987:806:32:o;4798:140::-;4856:5;4885:47;4926:4;4916:8;4912:19;4906:4;4885:47;:::i;4943:168::-;5016:9;;;5047;;5064:15;;;5058:22;;5044:37;5034:71;;5085:18;;:::i;5116:217::-;5156:1;5182;5172:132;;5226:10;5221:3;5217:20;5214:1;5207:31;5261:4;5258:1;5251:15;5289:4;5286:1;5279:15;5172:132;-1:-1:-1;5318:9:32;;5116:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address)": "c4d66de8",
    "mint(address,uint256)": "40c10f19",
    "mint_relative(address,uint256)": "6962f845",
    "minter()": "07546172",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_frac\",\"type\":\"uint256\"}],\"name\":\"mint_relative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CurveToken.sol\":\"CurveToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/CurveToken.sol\":{\"keccak256\":\"0x79b6bd68f3f1d2f3a8426a4e67dfbb394ab1fea2300304563706d1d79dff1d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e815f34978bf1e9689ee5605dbe03adb13d36e2905152ece7617580c50622e5a\",\"dweb:/ipfs/QmRULDxDom6oqafj1BSgbUHdw2NTw7nxEiQAvcsoAML82W\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_frac",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint_relative",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CurveToken.sol": "CurveToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/CurveToken.sol": {
        "keccak256": "0x79b6bd68f3f1d2f3a8426a4e67dfbb394ab1fea2300304563706d1d79dff1d9b",
        "urls": [
          "bzz-raw://e815f34978bf1e9689ee5605dbe03adb13d36e2905152ece7617580c50622e5a",
          "dweb:/ipfs/QmRULDxDom6oqafj1BSgbUHdw2NTw7nxEiQAvcsoAML82W"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/CurveToken.sol",
    "id": 45765,
    "exportedSymbols": {
      "Context": [
        43668
      ],
      "CurveToken": [
        45764
      ],
      "ERC20": [
        43543
      ],
      "IERC20": [
        43621
      ],
      "IERC20Metadata": [
        43646
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1175:26",
    "nodes": [
      {
        "id": 45613,
        "nodeType": "PragmaDirective",
        "src": "33:23:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 45614,
        "nodeType": "ImportDirective",
        "src": "58:54:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45765,
        "sourceUnit": 43544,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45764,
        "nodeType": "ContractDefinition",
        "src": "115:1093:26",
        "nodes": [
          {
            "id": 45618,
            "nodeType": "VariableDeclaration",
            "src": "150:21:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "07546172",
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "165:6:26",
            "scope": 45764,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45617,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "150:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45620,
            "nodeType": "VariableDeclaration",
            "src": "177:13:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "185:5:26",
            "scope": 45764,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45619,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45624,
            "nodeType": "VariableDeclaration",
            "src": "196:34:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "224:6:26",
            "scope": 45764,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 45623,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 45621,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "196:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 45622,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "215:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45644,
            "nodeType": "FunctionDefinition",
            "src": "237:124:26",
            "nodes": [],
            "body": {
              "id": 45643,
              "nodeType": "Block",
              "src": "297:64:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45631,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45618,
                      "src": "307:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 45634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "324:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 45633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "316:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 45632,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 45635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "316:10:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "307:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45637,
                  "nodeType": "ExpressionStatement",
                  "src": "307:19:26"
                },
                {
                  "expression": {
                    "id": 45641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45638,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45620,
                      "src": "336:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45639,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "344:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "348:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "344:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "336:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45642,
                  "nodeType": "ExpressionStatement",
                  "src": "336:18:26"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4554482f737445544820506f6f6c204c5020546f6b656e",
                    "id": 45627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "257:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_002a109836c39cf70e73bdd6558847c044c47683ed3d24b4cb4ea2e7134338c6",
                      "typeString": "literal_string \"ETH/stETH Pool LP Token\""
                    },
                    "value": "ETH/stETH Pool LP Token"
                  },
                  {
                    "hexValue": "6372762d7374455448",
                    "id": 45628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "284:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f4a9486ace7b7daec2bda5c8fd81304abf2c5f73ce933e00a7f6f9b73741991e",
                      "typeString": "literal_string \"crv-stETH\""
                    },
                    "value": "crv-stETH"
                  }
                ],
                "id": 45629,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45626,
                  "name": "ERC20",
                  "nameLocations": [
                    "251:5:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43543,
                  "src": "251:5:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "251:45:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:2:26"
            },
            "returnParameters": {
              "id": 45630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:26"
            },
            "scope": 45764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45671,
            "nodeType": "FunctionDefinition",
            "src": "367:163:26",
            "nodes": [],
            "body": {
              "id": 45670,
              "nodeType": "Block",
              "src": "411:119:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45650,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45620,
                          "src": "429:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 45651,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "438:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 45652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "442:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "438:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "429:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "421:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 45654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45655,
                  "nodeType": "ExpressionStatement",
                  "src": "421:28:26"
                },
                {
                  "expression": {
                    "id": 45658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45656,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45618,
                      "src": "459:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45657,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45646,
                      "src": "468:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "459:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45659,
                  "nodeType": "ExpressionStatement",
                  "src": "459:14:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 45663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "505:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 45662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "497:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "497:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "497:10:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 45665,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "509:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "513:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "509:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "521:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45660,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43555,
                      "src": "488:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 45668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45669,
                  "nodeType": "EmitStatement",
                  "src": "483:40:26"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "376:10:26",
            "parameters": {
              "id": 45647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45646,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "395:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45671,
                  "src": "387:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "386:15:26"
            },
            "returnParameters": {
              "id": 45648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:26"
            },
            "scope": 45764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45696,
            "nodeType": "FunctionDefinition",
            "src": "536:185:26",
            "nodes": [],
            "body": {
              "id": 45695,
              "nodeType": "Block",
              "src": "601:120:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45681,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "619:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 45682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "623:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "619:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 45683,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45618,
                          "src": "633:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "619:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206d696e7465722063616e206d696e74",
                        "id": 45685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "641:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5605ba6ac81f24acb3988bd81f7dca50b73834d819173d244ade92c678155f1f",
                          "typeString": "literal_string \"only minter can mint\""
                        },
                        "value": "only minter can mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5605ba6ac81f24acb3988bd81f7dca50b73834d819173d244ade92c678155f1f",
                          "typeString": "literal_string \"only minter can mint\""
                        }
                      ],
                      "id": 45680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "611:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45687,
                  "nodeType": "ExpressionStatement",
                  "src": "611:53:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45689,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45673,
                        "src": "680:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45690,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45675,
                        "src": "685:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45688,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43360,
                      "src": "674:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:19:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45692,
                  "nodeType": "ExpressionStatement",
                  "src": "674:19:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 45693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "710:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 45679,
                  "id": 45694,
                  "nodeType": "Return",
                  "src": "703:11:26"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "545:4:26",
            "parameters": {
              "id": 45676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45673,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "558:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45696,
                  "src": "550:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45675,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "568:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45696,
                  "src": "563:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45674,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:27:26"
            },
            "returnParameters": {
              "id": 45679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45696,
                  "src": "595:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45677,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "594:6:26"
            },
            "scope": 45764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45738,
            "nodeType": "FunctionDefinition",
            "src": "727:279:26",
            "nodes": [],
            "body": {
              "id": 45737,
              "nodeType": "Block",
              "src": "799:207:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45706,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "814:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 45737,
                      "src": "809:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45705,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "809:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45717,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 45710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 45707,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43041,
                          "src": "824:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 45708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "824:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 45709,
                        "name": "_frac",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45700,
                        "src": "840:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "824:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "849:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 45712,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43031,
                              "src": "855:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 45713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "855:10:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "849:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 45715,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "848:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "824:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "809:57:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45719,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "884:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 45720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "888:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "884:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 45721,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45618,
                          "src": "898:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "884:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206d696e7465722063616e206d696e74",
                        "id": 45723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5605ba6ac81f24acb3988bd81f7dca50b73834d819173d244ade92c678155f1f",
                          "typeString": "literal_string \"only minter can mint\""
                        },
                        "value": "only minter can mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5605ba6ac81f24acb3988bd81f7dca50b73834d819173d244ade92c678155f1f",
                          "typeString": "literal_string \"only minter can mint\""
                        }
                      ],
                      "id": 45718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "876:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45725,
                  "nodeType": "ExpressionStatement",
                  "src": "876:53:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45726,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45706,
                      "src": "943:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 45727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "953:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "943:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45734,
                  "nodeType": "IfStatement",
                  "src": "939:36:26",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 45730,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45698,
                          "src": "962:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45731,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45706,
                          "src": "967:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 45729,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43360,
                        "src": "956:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 45732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "956:19:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 45733,
                    "nodeType": "ExpressionStatement",
                    "src": "956:19:26"
                  }
                },
                {
                  "expression": {
                    "id": 45735,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45706,
                    "src": "992:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45704,
                  "id": 45736,
                  "nodeType": "Return",
                  "src": "985:14:26"
                }
              ]
            },
            "functionSelector": "6962f845",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint_relative",
            "nameLocation": "736:13:26",
            "parameters": {
              "id": 45701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45698,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "758:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45738,
                  "src": "750:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45700,
                  "mutability": "mutable",
                  "name": "_frac",
                  "nameLocation": "768:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45738,
                  "src": "763:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45699,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:25:26"
            },
            "returnParameters": {
              "id": 45704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45738,
                  "src": "793:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45702,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:6:26"
            },
            "scope": 45764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45763,
            "nodeType": "FunctionDefinition",
            "src": "1012:194:26",
            "nodes": [],
            "body": {
              "id": 45762,
              "nodeType": "Block",
              "src": "1083:123:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45748,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1101:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 45749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1105:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1101:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 45750,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45618,
                          "src": "1115:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1101:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206d696e7465722063616e206275726e",
                        "id": 45752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1123:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e30ea752408c9988c0b351e9e9edb9c722604e77e8d5725653e8224846e3e46b",
                          "typeString": "literal_string \"only minter can burn\""
                        },
                        "value": "only minter can burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e30ea752408c9988c0b351e9e9edb9c722604e77e8d5725653e8224846e3e46b",
                          "typeString": "literal_string \"only minter can burn\""
                        }
                      ],
                      "id": 45747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1093:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45754,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:53:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45756,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45740,
                        "src": "1162:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45757,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45742,
                        "src": "1169:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45755,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43432,
                      "src": "1156:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45759,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:21:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 45760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1195:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 45746,
                  "id": 45761,
                  "nodeType": "Return",
                  "src": "1188:11:26"
                }
              ]
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1021:8:26",
            "parameters": {
              "id": 45743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45740,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1038:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45763,
                  "src": "1030:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45742,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1050:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 45763,
                  "src": "1045:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45741,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1029:29:26"
            },
            "returnParameters": {
              "id": 45746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45745,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45763,
                  "src": "1077:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:6:26"
            },
            "scope": 45764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45615,
              "name": "ERC20",
              "nameLocations": [
                "138:5:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43543,
              "src": "138:5:26"
            },
            "id": 45616,
            "nodeType": "InheritanceSpecifier",
            "src": "138:5:26"
          }
        ],
        "canonicalName": "CurveToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45764,
          43543,
          43646,
          43621,
          43668
        ],
        "name": "CurveToken",
        "nameLocation": "124:10:26",
        "scope": 45765,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 26
}